name: First Exercise - Output e Artefatos
on: push
jobs:
    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
          - name: Get code
            uses: actions/checkout@v3
          - name: Cache dependencies
            uses: actions/cache@v3
            with:
              # se já existe a pasta .npm, ele verifica o hash do arquivo package-lock.json, se for o mesmo hash, utilizado cache
              # caso contrário, gera outro
              # https://github.com/actions/cache
              path: ˜/.npm 
              # hashFiles produz um hash para os arquivos, facilitando a identificacao caso haja alguma mudanca para atualizar o cache
              key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          # Caso haja a pasta .npm, o comando npm ci não vai baixar novamente
          # o cache é usado para a pasta .npm permanecer caso nao haja mudancas no arquivo package-lock.json
          - name: Install dependencies
            working-directory: ./first-exercise
            run: npm ci
          - name: Lint
            working-directory: ./first-exercise
            run: npm run lint
    test:
        name: Test
        needs: lint
        runs-on: ubuntu-latest
        steps:
          - name: Get code
            uses: actions/checkout@v3
          - name: Cache dependencies
            uses: actions/cache@v3
            with:
              path: ˜/.npm 
              # hashFiles produz um hash para os arquivos, facilitando a identificacao caso haja alguma mudanca para atualizar o cache
              key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          - name: Install dependencies
            working-directory: ./first-exercise
            run: npm ci
          - name: Test
            working-directory: ./first-exercise
            run: npm run test
    build:
        name: Build
        needs: test
        runs-on: ubuntu-latest
        outputs:
          script-file: ${{ steps.publish.outputs.script-file }}
        steps:
          - name: Get code
            uses: actions/checkout@v3
          - name: Cache dependencies
            uses: actions/cache@v3
            with:
              path: ˜/.npm 
              # hashFiles produz um hash para os arquivos, facilitando a identificacao caso haja alguma mudanca para atualizar o cache
              key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          - name: Install dependencies
            working-directory: ./first-exercise
            run: npm ci
          - name: Build application
            working-directory: ./first-exercise
            run: npm run build
            # busca nome do arquivo JS na pasta dist
          - name: Publish JS filename
            id: publish
            run: find ./first-exercise/dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
          - name: Upload artifact
            uses: actions/upload-artifact@v3
            with:
              name: dist-files
              path: ./first-exercise/dist
    deploy:
        name: Deploy
        needs: build
        runs-on: ubuntu-latest
        steps:
          # baixar artefato gerado no passo anterior
          - name: Get build artifacts
            uses: actions/download-artifact@v3
            with:
              name: dist-files
          - name: Output contents
            run: ls
          - name: Output filename
          # usando o objeto needs acessa o job que esse job depende (para output é a melhor opcao) e acessa o atributo script-file para acessar o filename
            run: echo "${{ needs.build.outputs.script-file }}"
          - name: Deploying
            run: echo "Deploying..."